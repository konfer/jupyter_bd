{
  "snippets" : [
    {
      "name" : "example",
      "code" : [
        "# This is an example snippet!",
        "# To create your own, add a new snippet block to the",
        "# snippets.json file in your jupyter nbextensions directory:",
        "# /nbextensions/snippets/snippets.json",
        "import this"
      ]
    },
    {
      "name" : "ml common imports",
      "code" : [
	"#EDA common import",
        "import numpy as np",
        "import pandas as pd",
        "import matplotlib as mpl",
        "import matplotlib.pyplot as plt",
        "import seaborn as sns",
        "import missingno as msno",
        "%matplotlib inline"
      ]
    },
    {
      "name" : "sklearn common",
      "code" : [
        "# Sklearn common imports!",
        "from sklearn.model_selection import GridSearchCV",
        "from sklearn.model_selection import train_test_split, cross_val_score",
        "from sklearn.model_selection import StratifiedShuffleSplit",
        "seed = 123"
      ]
    },
    {
      "name" : "sklearn Feature-Engineer",
      "code" : [
        "# Sklearn Feature-Engineer  imports!",
        "from sklearn.preprocessing import StandardScaler",
        "from sklearn.preprocessing import LabelBinarizer",
        "from sklearn.preprocessing import Normalizer",
        "from sklearn.preprocessing import MinMaxScaler",
        "from sklearn.preprocessing import Imputer",
        "from sklearn.preprocessing import LabelEncoder",
        "from sklearn.pipeline import Pipeline"
      ]
    },
    {
      "name" : "sklearn text-feature-engineer",
      "code" : [
        "# Sklearn text-Feature-Engineer  imports!",
        "from sklearn.feature_extraction.text import CountVectorizer",
        "from sklearn.feature_extraction.text import TfidfVectorizer",
        "from sklearn.naive_bayes import MultinomialNB"
      ]
    },
    {
      "name" : "sklearn model-select-linear",
      "code" : [
        "# Sklearn text-Feature-Engineer  imports!",
        "from sklearn.linear_model import Lasso, LassoCV "
      ]
    },
    {
      "name" : "sklearn model-ensemble",
      "code" : [
        "# Sklearn model-ensemble!",
        "from sklearn.ensemble import RandomForestRegressor"

      ]
    },
    {
      "name" : "stat",
      "code" : [
        "# stat import!",
        "from statsmodels.distributions.empirical_distribution import ECDF",
        "from sklearn.metrics import mean_squared_error, r2_score"
      ]
    },
    {
      "name" : "pandas-style",
      "code" : [
        "# pandas-style!",
        "def color_negative_red(val):",
        "    color = 'red' if val < 0 else 'black' ",
        "    return 'color: %s' % color ",
        "# df.style.applymap(color_negative_red)"
      ]
    },
    {
      "name" : "pandas-num-options",
      "code" : [
        "# pandas-num-option!",
        "pd.options.display.max_columns = 50  # None -> No Restrictions",
        "pd.options.display.max_rows = 200    # None -> Be careful with this",
        "pd.options.display.max_colwidth = 100",
        "pd.options.display.precision = 3"
      ]
    },
    {
      "name" : "pandas-table-style",
      "code" : [
        "# pandas-table-style!",
        "DF.head(10).style.set_table_styles(",
        "[{'selector': 'tr:nth-of-type(odd)','props': [('background', 'eee')]},",
        " {'selector': 'tr:nth-of-type(even)','props': [('background', 'white')]},",
        " {'selector': 'th','props': [('background', '#606060'), ",
        "                             ('color', 'white'),",
        "                             ('font-family', 'verdana')]},",
        " {'selector': 'td','props': [('font-family', 'verdana')]}",
        "])"
      ]
    },
    {
      "name" : "pytorch-common-import",
      "code" : [
        "# pytorch-common-import!",
        "import torch",
        "import torch.nn.functional as F",
        "#from torchvision.datasets import MNIST",
        "from torch import nn",
        "from torch.utils.data import DataLoader",
        "from torch.nn import init",
        "from torch.autograd import Variable "
      ]
    },
    {
      "name" : "TimeSeriesDataAnalyse",
      "code" : [
        "# Time-Series-Data-Analyse-import!",
        "import datetime as dt"
      ]
    }

  ]
}
